function LJacobFlatHip = Spring_Jacobian_Hip_func(in1)
%SPRING_JACOBIAN_HIP_FUNC
%    LJACOBFLATHIP = SPRING_JACOBIAN_HIP_FUNC(IN1,IN2)

%    This function was generated by the Symbolic Math Toolbox version 8.3.
%    14-Oct-2019 12:19:58

%Prosthesis file. Needs state and parameters as inputs
global flowdata
in2 =  flowdata.Parameters.Biped.asvector;
la = in2(:,10);
lf = in2(:,11);
ls = in2(:,9);
lt = in2(:,8);
y2 = in1(2,:);
y3 = in1(3,:);
t2 = cos(y2);
t3 = cos(y3);
t4 = sin(y3);
t5 = y2+y3;
t6 = la.^2;
t7 = lf.^2;
t8 = ls.^2;
t9 = lt.^2;
t10 = cos(t5);
t11 = sin(t5);
t12 = la.*ls.*t3.*2.0;
t13 = ls.*lt.*t2.*2.0;
t14 = lf.*ls.*t4.*2.0;
t15 = -t14;
t16 = la.*lt.*t10.*2.0;
t17 = lf.*lt.*t11.*2.0;
t18 = -t17;
t19 = t6+t7+t8+t9+t12+t13+t15+t16+t18;
t20 = 1.0./sqrt(t19);
LJacobFlatHip = [0.0;-lt.*t20.*(la.*t11+lf.*t10+ls.*sin(y2));-t20.*(la.*ls.*t4+la.*lt.*t11+lf.*ls.*t3+lf.*lt.*t10)];
